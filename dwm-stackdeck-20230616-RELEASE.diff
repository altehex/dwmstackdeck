1;4000;28cFrom 0400c2a283b55c90b0c5f8c5c875fb52e30394a0 Mon Sep 17 00:00:00 2001
From: alte_hex <helvetikadaufel@gmail.com>
Date: Sat, 17 Jun 2023 15:55:43 +0800
Subject: [PATCH] Two-window layout with one master and a deck of stack windows
 you can flip through

---
 config.def.h |  8 +++++---
 dwm.c        | 48 ++++++++++++++++++++++++++++++++++++++++++++----
 2 files changed, 49 insertions(+), 7 deletions(-)

diff --git a/config.def.h b/config.def.h
index 9efa774..278cd88 100644
--- a/config.def.h
+++ b/config.def.h
@@ -39,9 +39,10 @@ static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen win
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
+	{ "[]=",      tile      },    /* first entry is default */
+	{ "><>",      NULL      },    /* no layout function means floating behavior */
+	{ "[M]",      monocle   },
+    { "M|S",      stackdeck },
 };
 
 /* key definitions */
@@ -77,6 +78,7 @@ static const Key keys[] = {
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_s,      setlayout,      {.v = &layouts[3]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
diff --git a/dwm.c b/dwm.c
index f1d86b2..b831b36 100644
--- a/dwm.c
+++ b/dwm.c
@@ -44,6 +44,9 @@
 #include "drw.h"
 #include "util.h"
 
+/* configuration, allows nested code to access above variables */
+#include "config.h"
+
 /* macros */
 #define BUTTONMASK              (ButtonPressMask|ButtonReleaseMask)
 #define CLEANMASK(mask)         (mask & ~(numlockmask|LockMask) & (ShiftMask|ControlMask|Mod1Mask|Mod2Mask|Mod3Mask|Mod4Mask|Mod5Mask))
@@ -129,7 +132,7 @@ struct Monitor {
 	Client *stack;
 	Monitor *next;
 	Window barwin;
-	const Layout *lt[2];
+	const Layout *lt[LENGTH(layouts)];
 };
 
 typedef struct {
@@ -206,6 +209,7 @@ static void setup(void);
 static void seturgent(Client *c, int urg);
 static void showhide(Client *c);
 static void spawn(const Arg *arg);
+static void stackdeck(Monitor *m);
 static void tag(const Arg *arg);
 static void tagmon(const Arg *arg);
 static void tile(Monitor *m);
@@ -268,9 +272,6 @@ static Drw *drw;
 static Monitor *mons, *selmon;
 static Window root, wmcheckwin;
 
-/* configuration, allows nested code to access above variables */
-#include "config.h"
-
 /* compile-time check if all tags fit into an unsigned int bit array. */
 struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };
 
@@ -1666,6 +1667,45 @@ spawn(const Arg *arg)
 	}
 }
 
+void
+stackdeck(Monitor *m)
+{
+    unsigned int n,      /* number of clients */
+                 mw;     /* master area width */
+    Client *c; /* Ñˆindows */
+
+    /* nothing to do if no clients */
+    for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+    if (n == 0)
+        return;
+
+    /* if there are more than one master windows
+       set the top window in the stack as the only master */
+    if (m->nmaster > 1)
+        m->nmaster = 1;
+
+    c = nexttiled(m->clients);
+
+    /* if there is a master */
+    if (n > m->nmaster && m->nmaster != 0) {
+        /* calculate master width */
+        mw = m->nmaster ? m->ww * m->mfact : 0;
+
+        /* resize the master */
+        resize(c, m->wx, m->wy, mw - 2 * c->bw, m->wh - 2 * c->bw, 0);
+
+        /* resize stack windows */
+        for (c = nexttiled(c->next); c; c = nexttiled(c->next))
+            resize(c, m->wx + mw, m->wy, m->ww - mw - 2 * c->bw, m->wh - 2 * c->bw, 0);
+    /* if there's no master */
+    } else {
+        /* resize each window to be fullscreen */
+        mw = m->ww;
+        for (; c; c = nexttiled(c->next))
+            resize(c, m->wx, m->wy, m->ww - (2 * c->bw), m->wh - (2 * c->bw), 0);
+    }
+}
+
 void
 tag(const Arg *arg)
 {
-- 
2.41.0

